{"version":3,"sources":["FBase.js","components/AuthForm.js","routes/Auth.js","components/Tweet.js","components/TweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","dbService","firestore","authService","auth","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Tweet","tweetObj","isOwner","editing","setEditing","text","newTweet","setNewTweet","toggleEditing","doc","id","update","onDeleteClick","window","confirm","delete","refFromURL","attachmentUrl","autoFocus","src","class","faTrash","faPencilAlt","TweetFactory","userObj","tweet","setTweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","file","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","tweets","setTweets","useEffect","onSnapshot","snapshot","tweetArray","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","updateProfile","getMyTweets","where","orderBy","get","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab450811.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const dbService = firebase.firestore();\r\nexport const authService = firebase.auth();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"../FBase\";\r\n\r\nconst inputStyles = {};\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] =useState(\"\");\r\n    const [password, setPassword] =useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {target: {name,value}} = event;\r\n        if (name === \"email\"){\r\n            setEmail(value)\r\n        }\r\n        else if (name === \"password\"){\r\n            setPassword(value)\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            let data;\r\n            if (newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email, password);\r\n            }\r\n            else{\r\n                data = await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n            console.log(data);\r\n        } catch (error){\r\n            setError(error.message);\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" required value ={email} onChange={onChange} className=\"authInput\"/>\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"} className=\"authInput authSubmit\"/>\r\n            </form>\r\n            {error && <span className=\"authError\">{error}</span>}\r\n            <span onClick={toggleAccount} className=\"authSwitch\">{newAccount ? \"Sign in\": \"Create Account\"}</span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\r\nimport React from \"react\";\r\nimport { authService, firebaseInstance } from \"../FBase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n        const {target:{name},} = event;\r\n        let provider\r\n        if (name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        } \r\n        const data = await authService.signInWithPopup(provider);\r\n        console.log(data)\r\n        \r\n    }\r\n    return(\r\n    <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faTwitter}\r\n          color={\"#04AAFF\"}\r\n          size=\"3x\"\r\n          style={{ marginBottom: 30 }}\r\n    />\r\n        <AuthForm/>\r\n        <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n            Continue with Google \r\n            <FontAwesomeIcon icon={faGoogle}/>\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n            Continue with Github \r\n            <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Auth;","import { dbService, storageService } from \"FBase\";\r\nimport React, {useState} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({tweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n            text:newTweet\r\n        });\r\n        setEditing(false)\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {target: {value},} = event;\r\n        setNewTweet(value);\r\n    }\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this tweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n            await storageService.refFromURL(tweetObj.attachmentUrl).delete()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n    <div className=\"nweet\">\r\n        { editing ? (\r\n            <>\r\n                 <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input onChange={onChange} type=\"text\" placeholder=\"Edit your tweet\" value={newTweet} required autoFocus className=\"formInput\" />\r\n                    <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                </form> \r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>\r\n            </>\r\n        ):( \r\n            <>\r\n                <h4>{tweetObj.text}</h4>\r\n                {tweetObj.attachmentUrl && <img src={tweetObj.attachmentUrl} />}\r\n                {isOwner && <div class=\"nweet__actions\">\r\n                    <span onClick={onDeleteClick}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </span>\r\n                    <span onClick={toggleEditing}>\r\n                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                    </span>\r\n                </div>}\r\n            </>\r\n        )}\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Tweet;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"FBase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory = ({userObj}) => {\r\n    const [tweet, setTweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n\r\n    const onSubmit = async (event) => {\r\n        if (tweet === \"\") {\r\n            return;\r\n          }\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment != \"\"){\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const newTweet = {\r\n            text:tweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        };\r\n        await dbService.collection(\"tweets\").add(newTweet);\r\n        setTweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const { target: {value},} = event; \r\n        setTweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {target: {files}} = event;\r\n        const file = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) =>{\r\n            const {currentTarget: {result}} = finishedEvent\r\n            setAttachment(result)\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    const onClearAttachment = () =>{\r\n        setAttachment(\"\")\r\n    }\r\n\r\n\r\n\r\n    return(\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n            <input\r\n                className=\"factoryInput__input\"\r\n                value={tweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n        <label for=\"attach-file\" className=\"factoryInput__label\">\r\n            <span>Add photos</span>\r\n            <FontAwesomeIcon icon={faPlus} />\r\n        </label>\r\n        <input         \r\n            id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{\r\n                opacity: 0,\r\n            }}\r\n        />\r\n        {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n            <img\r\n                src={attachment}\r\n                style={{\r\n                backgroundImage: attachment,\r\n                }}\r\n            />\r\n            <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                <span>Remove</span>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n    );\r\n};\r\n\r\nexport default TweetFactory;","import Tweet from \"components/Tweet\";\r\nimport { dbService, storageService } from \"FBase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport React, { useEffect, useState } from \"react\";\r\nimport TweetFactory from \"components/TweetFactory\";\r\n\r\nconst Home = ({userObj}) =>{ \r\n    const [tweets, setTweets] = useState([]);\r\n\r\n    // const getTweets = async() => {\r\n    //     const dbTweets = await dbService.collection(\"tweets\").get();\r\n    //     dbTweets.forEach((document) => {\r\n    //         const tweetObject = {\r\n    //             ...document.data(),\r\n    //             id: document.id,\r\n    //         }\r\n    //         setTweets(prev => [tweetObject, ...prev]);\r\n    //     });\r\n    // }\r\n\r\n    useEffect(() => {\r\n        //getTweets();\r\n        dbService.collection(\"tweets\").onSnapshot((snapshot) => {\r\n            const tweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setTweets(tweetArray);\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n    <div className=\"container\">\r\n        <TweetFactory userObj={userObj}/>\r\n        <div style={{ marginTop: 30 }}>\r\n            {tweets.map( (tweet) => (\r\n            <Tweet key={tweet.id} tweetObj={tweet} isOwner={tweet.creatorId === userObj.uid} />\r\n            ))}\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\nexport default Home","import React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => \r\n<nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n            to=\"/profile\"\r\n            style={{\r\n                marginLeft: 10,\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                fontSize: 12,\r\n            }}\r\n            >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName\r\n                    ? `${userObj.displayName}'s Profile`\r\n                    : \"Profile\"}\r\n                </span>\r\n            </Link>\r\n      </li>\r\n    </ul>\r\n\r\n</nav>;\r\n\r\nexport default Navigation;","import React, { useEffect, useState } from \"react\";\r\nimport { authService, dbService } from \"../FBase\";\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nconst Profile = ({userObj, refreshUser}) => {\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const history = useHistory()\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\")\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const {target: {value},} =event;\r\n        setNewDisplayName(value);\r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n\r\n    const getMyTweets = async() => {\r\n        const tweets = await dbService.collection(\"tweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\", \"desc\").get();\r\n        console.log(tweets.docs.map((doc)=> doc.data()));\r\n\r\n    }\r\n    useEffect(() => {\r\n        getMyTweets();\r\n    },[]);\r\n\r\n    return (\r\n    <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n            <input type=\"text\" placeholder=\"Display name\" value={newDisplayName} onChange={onChange} autoFocus/>\r\n            <input\r\n                type=\"submit\"\r\n                value=\"Update Profile\"\r\n                className=\"formBtn\"\r\n                style={{\r\n                marginTop: 10,\r\n                }}\r\n            />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n            Log Out\r\n        </span>\r\n    </div>\r\n    );\r\n};\r\nexport default Profile","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"../routes/Profile\";\r\n\r\nconst AppRouter = ({refreshUser, isLoggedIn, userObj}) =>{\r\n    return(\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                    <Route exact path=\"/\">\r\n                        <Home userObj={userObj}/>\r\n                    </Route>\r\n                    <Route exact path=\"/profile\">\r\n                        <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n                    </Route>\r\n                    <Redirect from=\"*\" to=\"/\"/>\r\n                    </div> \r\n                ):(\r\n                <>\r\n                    <Route exact path=\"/\">\r\n                        <Auth/>\r\n                    </Route>\r\n                    <Redirect from=\"*\" to=\"/\"/>\r\n                </>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"FBase\"\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null);\n  useEffect( () => {\n    authService.onAuthStateChanged((user) => {\n      if (user){\n        // setUserObj(user);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        })\n      } else{\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, [])\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    //setUserObj(Object.assign({},user));\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  };\n\n  return(\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/> : \"Initializing...\" }\n    </>\n  ) \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}